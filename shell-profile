# Load plugins
for plugin in "$(dirname $(realpath ${BASH_SOURCE[0]:-${(%):-%x}}))"/shell-plugins/*; do
	source "$plugin"
done

# Custom aliases
alias sl='ls'
alias o='xopen'
alias p='python3'
alias fd='fdfind'
alias ls='lsd'
alias igrep='grep -i'
alias getpid='xprop | grep -i pid | sed "s/[^0-9]//g"'
alias freeze='kill -SIGSTOP $(getpid)'
alias unfreeze='kill -SIGCONT $(getpid)'
which bat > /dev/null && alias cat='bat'
which batcat > /dev/null && alias cat='batcat'
which code > /dev/null || alias code='codium'
alias clip='xclip -sel clip'
alias build='cmakebuild'
alias rp='realpath'
alias '?'='echo $?'
alias ip4echo='curl https://www.ipecho.net/plain'
alias ip6echo='curl https://ipecho.net/plain'
alias ipecho='ip4echo'
alias lower='tr "[:upper:]" "[:lower:]"'
alias upper='tr "[:lower:]" "[:upper:]"'
alias nvrun='__NV_PRIME_RENDER_OFFLOAD=1 __GLX_VENDOR_LIBRARY_NAME=nvidia'
alias setpinasdate='ssh -A pinas sudo date -s \"$(date -R)\"'
alias lzd='lazydocker'

# Custom functions
function xopen {
	if [[ $# == 0 ]]; then xdg-open .; return; fi
	for i in "$@"; do
		xdg-open $i
	done
}
function ogrep {
	local args
	while (($#)); do
		args="$args -e $1"
		shift
	done
	cat | eval grep $args
}
function cmakebuild {
	if [[ $(basename "$(pwd)") = build ]]; then
		cmake . &&
		cmake --build .
	else
		cmake -B build &&
		cmake --build build
	fi
}
function randompass {
	python3 -c "import string, random; print(''.join(random.choices(string.ascii_letters + string.digits, k=${1:-10})))"	
}
function pdfcompress {
	if [ $# -ne 2 ]; then
		echo "Usage: pdfcompress <input_file.pdf> <output_file.pdf>" 1>&2
		return 1
	fi
	gs -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dPDFSETTINGS="/ebook" -dNOPAUSE -dQUIET -dBATCH -sOutputFile="$2" "$1"
}
function pdfunlock {
	if [ $# -lt 1 ]; then
		echo "Usage: pdfunlock <input_files.pdf>" 1>&2
		return 1
	fi
	echo -n "Enter PDF password: "
	read -s password
	echo
	while (($#)); do
		echo "Unlocking $1..."
		gs -q -sPDFPassword="$password" -dNOPAUSE -dBATCH -sDEVICE=pdfwrite -sOutputFile="$(basename "$1" .pdf)_unlocked.pdf" "$1"
		shift
	done
}
function commandsfrom {
	if [ $# -lt 1 ]; then
		echo "Usage: commandsfrom <package> [...]"
		return 1
	fi
	local regexp=$(echo "$PATH" | sed 's/:/|/g')
	dpkg -L "$@" | grep --color=never -E "$regexp" | grep -vxE "$regexp"
}
function wherefrom {
	if [ $# -lt 1 ]; then
		echo "Usage: wherefrom <command> [...]"
		return 1
	fi
	[[ -n $(/bin/which "$@") ]] || { echo "None of the supplied command where found in PATH"; return 2; }
	dpkg -S $(/bin/which "$@")
}

# Environment variables
if [[ "$TMUX" ]]; then
	export LESS="-R --mouse"
fi
